plugins {
  id "com.diffplug.spotless" version "$spotlessVersion"
  id 'org.barfuin.gradle.jacocolog' version '2.0.0'
  id "org.flywaydb.flyway" version "$flywayVersion"
  id "org.springframework.boot" version "$springVersion"
  id "io.spring.dependency-management" version "$springDependencyManagementVersion"
  id 'jacoco'
  id 'java'
}

group = 'mil.usaf'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.flywaydb:flyway-core'
  implementation "com.opencsv:opencsv:$opencsvVersion"
  compileOnly 'org.projectlombok:lombok'
  runtimeOnly 'mysql:mysql-connector-java'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

flyway {
  url = "jdbc:$System.env.DB_URL"
  user = "$System.env.DB_USER"
  password = "$System.env.DB_PASSWORD"
}

jacoco {
  toolVersion = "${jacocoVersion}"
}

spotless {
  ratchetFrom 'origin/master'

  format 'misc', {
    target '*.gradle', '*.md', '.gitignore'

    trimTrailingWhitespace()
    indentWithSpaces(2)
    endWithNewline()
  }

  java {
    importOrder()
    googleJavaFormat()
    removeUnusedImports()
  }
}

compileJava.dependsOn 'spotlessApply'

test {
  useJUnitPlatform()

  // testLogging {
  //   events "PASSED", "SKIPPED", "FAILED"
  //   showStandardStreams = true
  // }

  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test

  // reports {
  //   xml.required = true
  //   csv.required = true
  // }
}
